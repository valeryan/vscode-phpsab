{
  "name": "vscode-phpsab",
  "displayName": "PHP Sniffer & Beautifier",
  "description": "PHP Sniffer & Beautifier for Visual Studio Code",
  "version": "0.0.18",
  "icon": "php_logo.png",
  "publisher": "valeryanm",
  "homepage": "https://github.com/valeryan/vscode-phpsab",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/valeryan/vscode-phpsab.git"
  },
  "bugs": {
    "url": "https://github.com/valeryan/vscode-phpsab/issues"
  },
  "engines": {
    "vscode": "^1.86.0"
  },
  "categories": [
    "Formatters",
    "Linters",
    "Other"
  ],
  "keywords": [
    "php",
    "phpcs",
    "phpcbf",
    "linter",
    "fixer"
  ],
  "activationEvents": [
    "onLanguage:php"
  ],
  "main": "./out/main.js",
  "contributes": {
    "commands": [
      {
        "command": "fixer.fix",
        "title": "PHPCBF: Fix this file",
        "when": "!inOutput && editorFocus && editorLangId == php"
      }
    ],
    "configuration": {
      "title": "PHP Sniffer & Fixer Configuration options",
      "type": "object",
      "properties": {
        "phpsab.fixerEnable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Control if this fixer is enabled for PHP files or not."
        },
        "phpsab.fixerArguments": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "Additional arguments passed to phpcbf"
        },
        "phpsab.executablePathCBF": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "Optional. The default path to the phpcbf executable. Can be overridden if auto search is enabled."
        },
        "phpsab.executablePathCS": {
          "scope": "resource",
          "type": "string",
          "default": null,
          "description": "Optional. The default path to the phpcs executable. Can be overridden if auto search is enabled."
        },
        "phpsab.composerJsonPath": {
          "scope": "resource",
          "type": "string",
          "default": "composer.json",
          "description": "The path to composer.json"
        },
        "phpsab.standard": {
          "scope": "resource",
          "type": [
            "string",
            "null"
          ],
          "default": null,
          "description": "Optional. The default config to use or global standard. Can be overridden if auto search is enabled."
        },
        "phpsab.autoRulesetSearch": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Automatically search for a ruleset file to use as configuration. Overrides custom standards defined above."
        },
        "phpsab.allowedAutoRulesets": {
          "scope": "resource",
          "type": "array",
          "default": [
            ".phpcs.xml",
            ".phpcs.xml.dist",
            "phpcs.xml",
            "phpcs.xml.dist",
            "phpcs.ruleset.xml",
            "ruleset.xml"
          ],
          "description": "Filenames to search for that contain the ruleset for fixers."
        },
        "phpsab.snifferEnable": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Control if this sniffer is enabled for PHP files or not."
        },
        "phpsab.snifferArguments": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "Additional arguments passed to phpcs"
        },
        "phpsab.snifferMode": {
          "type": "string",
          "default": "onSave",
          "enum": [
            "onSave",
            "onType"
          ],
          "markdownDescription": "When to run `phpcs`."
        },
        "phpsab.snifferTypeDelay": {
          "type": "number",
          "default": 250,
          "minimum": 0,
          "markdownDescription": "When `phpsab.snifferMode` is `onType`, this sets the amount of milliseconds the validator will wait after typing has stopped before it will run."
        },
        "phpsab.snifferShowSources": {
          "type": "boolean",
          "default": false,
          "description": "Control if phpcs report should include sniff sources."
        },
        "phpsab.debug": {
          "type": "boolean",
          "default": false,
          "description": "Write debug info to the console"
        }
      }
    }
  },
  "scripts": {
    "compile": "rimraf out && tsc -p ./",
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/main.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "lint": "eslint src --ext ts",
    "pretest": "npm run compile && npm run lint",
    "test": "vscode-test"
  },
  "dependencies": {
    "cross-spawn": "^7.0.3",
    "lodash": "^4.17.21"
  },
  "devDependencies": {
    "@types/cross-spawn": "^6.0.6",
    "@types/lodash": "^4.14.202",
    "@types/mocha": "^10.0.6",
    "@types/node": "^20.11.20",
    "@types/sinon": "^17.0.3",
    "@types/vscode": "^1.86.0",
    "@typescript-eslint/eslint-plugin": "^7.0.2",
    "@typescript-eslint/parser": "^7.0.2",
    "@vscode/test-cli": "^0.0.6",
    "@vscode/test-electron": "^2.3.9",
    "commitizen": "^4.3.0",
    "cz-conventional-changelog": "^3.3.0",
    "esbuild": "^0.20.1",
    "eslint": "^8.56.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-prettier": "^5.1.3",
    "prettier-plugin-organize-imports": "^3.2.4",
    "rimraf": "^5.0.5",
    "sinon": "^17.0.1",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3"
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}
